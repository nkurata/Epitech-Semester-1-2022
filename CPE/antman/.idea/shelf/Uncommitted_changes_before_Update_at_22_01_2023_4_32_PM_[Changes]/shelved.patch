Index: antman/src/main.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n** EPITECH PROJECT, 2023\n** B-CPE-110-PAR-1-2-antman-luca.martinet\n** File description:\n** main.c\n*/\n\n#include \"../include/antman.h\"\n\nchar *compress(char *buf, size_t size)\n{\n    int wordc = 0;\n    printf(\"hello\");\n    int ltrc = 0;\n    int bufltrc = 0;\n    char *bufout = malloc(sizeof(char) * (size + 1));\n    char **arr = my_str2wordarray(buf);\n    while (buf[ltrc] != ' ')\n        bufout[bufltrc] = arr[1][ltrc];\n    return bufout;\n}\n\nint main(int ac, char **av)\n{\n    int input = open(av[1], O_RDONLY); // opening input file\n    if (input == -1)\n        return 84;\n    int output = open(av[2], O_WRONLY | O_CREAT); // opening output file (compressed.data)\n    struct stat st;\n    if(stat(av[1], &st) == -1)\n        return 84;\n    int size = st.st_size; // length\n    char *buf = malloc(sizeof(char) * (size + 1));\n    if (read(input, buf, size) <= 0)\n        return 84;\n    buf[st.st_size] = '\\0';\n    char *buffer = compress(buf, size);\n    int compressed_size = size; // the size of the compressed data\n    if (write(output, buffer, compressed_size) <= 0)\n        return 84;\n    close(input);\n    close(output);\n    free(buf);\n    free(buffer);\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/antman/src/main.c b/antman/src/main.c
--- a/antman/src/main.c	(revision fe47052cc601d8b8742a74275b66bd9c5a784aca)
+++ b/antman/src/main.c	(date 1674399248394)
@@ -42,5 +42,6 @@
     close(output);
     free(buf);
     free(buffer);
+    return 0;
 }
 
